!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A3LAPWR	antmod.c	27;"	d	file:
A3LARX	antmod.c	28;"	d	file:
A3LATX	antmod.c	29;"	d	file:
ADCPWR	antmod.c	24;"	d	file:
ANT	antmod.c	43;"	d	file:
ANTSW	antmod.c	25;"	d	file:
BAUD	antmod.c	37;"	d	file:
BUFSIZE	antmod.c	38;"	d	file:
BUOY	antmod.c	40;"	d	file:
COM4PWR	antmod.c	31;"	d	file:
COM4RX	antmod.c	32;"	d	file:
COM4TX	antmod.c	33;"	d	file:
DBG	antmod.h	33;"	d
DBG	antmod.h	35;"	d
DBG1	antmod.h	39;"	d
DBG1	antmod.h	43;"	d
IRID	antmod.c	42;"	d	file:
LogFile	antmod.c	/^char *LogFile = {"sys.log"}; $/;"	v
OpenBuoyPt	antmod.c	/^TUPort* OpenBuoyPt(void) {$/;"	f
OpenSbePt	antmod.c	/^TUPort* OpenSbePt(void) {$/;"	f
PAMONEBIT	antmod.c	20;"	d	file:
PAMPWR	antmod.c	18;"	d	file:
PAMRX	antmod.c	21;"	d	file:
PAMTX	antmod.c	22;"	d	file:
PAMZEROBIT	antmod.c	19;"	d	file:
RS232_SETTLE	antmod.c	12;"	d	file:
SBE	antmod.c	41;"	d	file:
SBEPWR	antmod.c	14;"	d	file:
SBERX	antmod.c	15;"	d	file:
SBETX	antmod.c	16;"	d	file:
SYSCLK	antmod.c	35;"	d	file:
VERSION	antmod.c	11;"	d	file:
WTMODE	antmod.c	36;"	d	file:
antBreak	antmod.c	/^void antBreak(void) {$/;"	f
antSw	antmod.c	/^char antSw;$/;"	v
antennaSwitch	antmod.c	/^void antennaSwitch(char c) {$/;"	f
buf	antmod.c	/^uchar *buf;$/;"	v
buoy	antmod.c	/^TUPort *buoy, *sbe; \/\/ dev port of connnected upstream device$/;"	v
buoyCin	antmod.c	/^char buoyCin(void) {$/;"	f
buoyCout	antmod.c	/^void buoyCout(char ch) {$/;"	f
buoyQ	antmod.c	/^int buoyQ(void) {$/;"	f
buoyStr	antmod.c	/^void buoyStr(char *out) {$/;"	f
c	antmod.c	/^struct { char *name, c; bool power; } dev[4] = {$/;"	m	struct:__anon1	file:
char2id	antmod.c	/^short char2id(short ch) {$/;"	f
dev	antmod.c	/^struct { char *name, c; bool power; } dev[4] = {$/;"	v	typeref:struct:__anon1
help	antmod.c	/^void help() {$/;"	f
init	antmod.c	/^void init() {$/;"	f
main	antmod.c	/^void main() {$/;"	f
name	antmod.c	/^struct { char *name, c; bool power; } dev[4] = {$/;"	m	struct:__anon1	file:
power	antmod.c	/^short power(short c, bool on) {$/;"	f
power	antmod.c	/^struct { char *name, c; bool power; } dev[4] = {$/;"	m	struct:__anon1	file:
prerun	antmod.c	/^void prerun() {$/;"	f
printchar	antmod.c	/^void printchar(char c) {$/;"	f
sbe	antmod.c	/^TUPort *buoy, *sbe; \/\/ dev port of connnected upstream device$/;"	v
status	antmod.c	/^void status() {$/;"	f
