Sun, Sep 23, 2018  2:34:24 PM
wsp --> 
(60 sec)
$GPS*
(10 sec)
$NGN*
(10 sec)
"$EXI*" -> $FIN*
(2:15)
$RDY*
"$WS?*" -> $NLW*,09/23/18,21:36:49,0026,0002*done
(2:30)
done


#echo "checking com1 for shell escape"
#echo "?" >> /dev/ttyBF1
#read -t 3 a < /dev/ttyBF1
#if [ "$a" == "!!" ]; then
#       hush < /dev/ttyBF1 > /dev/ttyBF1
/bin/wispr -l wispr.log -v2 -T8 -b15 -M2 -F2 -g0 -r

date -s 2018.09.20-10:41:00
hwclock -w

Mon, May 14, 2018  9:05:11 AM
code.
"$DX?,%d*\n", dtx   call to the wsp board with max_detections
responds with a $DXN...* com line then lists each actual detection
afterward with a $DTX...* com line. Each are up to ~60 bytes per line

$DFP*
$DFP,99.99*
$DX?,2*
$DXN,0001,24/04/76,17:54:43,00045,00193,00082,00013,27,000*
$DTX,24/04/76,17:54:11,45,193.005,82.104,13.695,0.278*
$DX?,2*
$DXN,0007,24/04/76,18:02:23,00333,00194,00082,00013,27,000*
$DTX,24/04/76,17:58:11,45,193.005,82.104,13.695,0.278*
$DTX,24/04/76,17:58:51,54,196.200,82.060,13.793,0.270*
$DX?,2*
$DXN,0000,24/04/76,18:02:47,00000,00000,00000,00000,00,000*
$EXI*
$FIN*

with empty CF card, no response to DFP for 20 secs
with full CF card, no response to DFP for 20 secs

---
print_help()
WISPR Data Logger/Detector 
Version X.X 
Options:           DESCRIPTION                                DEFAULT
 -M {mode}         Processing mode number                     [ 1 ]
 -T {secs}         Size of ADC data buffers in seconds        [ 8 seconds ]
 -F {level}        Sets flac compression level                [ 2 ]
 -s {bitshift}     Sets data bitshift                         [ 8 ]
 -o {organization} Organization string                        [ none ]
 -b {number}       Number of data buffers per file            [ 10 ]
 -n {nclick}       Min number of click for detection          [ 10 ]
 -b {nbufs}        Number of ADC buffers for detection window [ 5 ]
 -i {number}       Number buffers to skip between file        [ 10 ]
 -p {prefix}       Data file name prefix                      [ wispr_ ]
 -l {filename}     Log file name                              [ no log file ]
 -v {level}        Verbose level (0=none)                     [ 0 ]
 -L                Enable LEDs                                [ disabled ]
 -r                Set RTC and lat/lon at startup             [ disabled ] 
 -W                Run in Wave Test Mode                      [ disabled ] 

Modes: 
 - Mode 1: Record continuously, no detection functionality 
 - Mode 2: Record continuously with detection functionality 
 - Mode 3: Record intermittently. 
           Skip specified number of buffers between files. 
 - Mode 4: Run detection function only. 
           Process incoming data continuously with the detection function,
           but only write a file when a detection appeared.
 - Mode 5: Run detection function and record data intermittently.
           Same idea as mode 4 + record data intermittently.
           Used to get an idea how many encounters were missed or 
           to monitor noise levels regularly).

 - Wave Test Mode:
           Test mode that reads data from bw_test.wav and 
           overwrites the adc buffer before processing the buffer.

getopt()
M:T:s:g:C:i:n:b:m:f:F:o:l:p:v:rLhWx
   'C': // number of files to record I
   'F': // flac compression level (1-8) I
   'L': // LEDs enable 1
   'M': // wispr mode (1-6) I
   'T': // adc buffer duration F
   'W': // Enable wave test mode 1
   'b': // num_bufs_per_file I
   'f': // adc sampling frequency I
   'g': // gain I
   'h': // help
   'i': // num_bufs_skipped_between_files I
   'l': // override default log file name XXX/32
   'n': // number of clicks per detection I
   'o': // "ORGANIZATION" in flac metadata XXXXX
   'p': // output data file prefix XXXXX
   'r': // set clock on startup 1
   's': // bit shift I
   'v': // verbose I
   'x': // do_clock_cycle_count 1

---

/bin/wispr –l wispr.log -v2 –T8 –b15 -M2 -F2 –g0 –r
mount /dev/sda1 /mnt
/bin/spectrogram –T10 –C12 –v1 –n512 –o256 –g0 -t20 – l noise.log

The third line from the bottom is the logging program. Once the logging program begins, it continues logging until either the data storage spaces runs out or it receives $EXI* from CF2 to COM1 to stop logging. 

To run the wispr program in a simulated mode, change /bin/wispr .... line in the start file.
/bin/wispr -l wispr.log -v2 -T8 -b15 -M2 -FR -g0 -W
The last option, W runs the same program which injects a simulated beaked whale call, records the the data and reports the detection to CF2. If your program passes this test, it will work in the field.
-Haru

