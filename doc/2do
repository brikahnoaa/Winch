Fri, Mar  1, 2019  4:23:42 PM
v errors to fix
v. data cycle, to only go up once a day
v. write file, send file - lost ability
. verify
v. output s16.log s39.log
.. datetime for 16+32
. improvements this april
v. humid, press, battery - and turn off after using
.. gps fresh - if gps time change is >3 sec
.. stay down command (X cycles)
.. data from 16+32 rise and fall
.. process land commands
... commands sent to buoy, stored and sent back to land after processing
.. more info in eng report
v.. temp, ocean curr at dock; cycles
v.. gps drift, surf depth
... disk space wspr, # of reboots, cf2 disk space 
... voltage info
... water column data, detections, storm 
.. robust winch commands (resend, detect)
v.. up bgn/end, down bgn/end
v. set gain, gps time every data cycle (daily)
. test cycle
.. change gain remote
. planned, if we have time 
..1 in case of failure to create files, execute reboot
..2 collect data from sbe16 and sbe39 both during descent
..3 special test - at 10m. go up, stop, do measurements, come back down
..4 spectrogram only before rise, not every shutdown
..5 automatic timeout on surface, detected by winch params not buoy code
..6 calendar - season to stay down

from haru:
CF2 program to work on (3/1/2019)
1. Send command from shore
a. Pre-amp gain (CF2 to WISPR)
b. Change of rise time
c. Cancelling the rises for the following multiple days
i. How many days? (1-250 days, e.g., sea ice season)
d. Change the % of duty cycle.
2. Send data from the buoy
a. CF2 stores the WISPR detections and attach a file for data transmission
b. Battery voltage
c. Free data space of WISPR
d. Run the “spectrogram8kHz” before rise. Send the wind speed and noise level.
e. Measure the tilt angle of mooring from the two CTDs.
f. Stored SBE16 data of previous falling
g. Stored SBE39 data while rising
3. Keep data transmission size under 10 kB per rise.
a. If the buoy stays for many days (e.g., 180 days), there are a lot files to send. What is
the good strategy to catch up the file transmission? Send multiple files per rise? If so,
in what order (e.g., old -&gt;new or new-old?)


Tue, Feb 26, 2019  8:59:09 AM
sed -i 's/boy.testCnt/tst\.testCnt/'
check utlLogPathName(x,x,x)
. ugly
.. iridPhase while loop to send the types of files
.. utlLogFile utlLogPathName
. remote reset
boy.reset is wrong variable
reset after fall phase only
. test
.. multiple rise per day?
.. shorter minutes?
.. tst.various - put all the test garbage in one placy
boy.test to activate
boy.noRise .noIrid .noData .noDeploy .testing .cycleMax .testCnt .testSize
. not on by default
.. ice
.. no rise when wind storm

: time algor
 now - 2am - before?-add24hrs
 test

. wspr
.. storm check control from lara, not wspr start file
.. set clock

Thu, Feb 21, 2019  9:57:01 AM
. options

Sat, Feb  9, 2019  3:17:10 PM
. rise fall
tolerate bad commun
.. data phase
... set rise time
... collect data
one hour, then check current against rise hour; repeat
... storm check (get tougher each day)
. boy.stop = remote stop cmd
. data collection
.. engineering data redux
.. chem data

Tue, Jun 26, 2018  3:45:55 PM
. run out line through entire call phase
. gather data for extended line, antMod depth with brake on
. GPS time -> cf2 -> wispr

cycle 1 @2019-03-21 20:41:58 dataPhase()
 === antenna module stop 2019-03-21 20:41:58+antDevice(cf2)
wspRiseT(): rise at 2019-03-21 22:00:00
wspDetectD() starting wispr detection; end in 1 hours
wspStart(): activating wispr#1+(log\001wsp.log)+
utlLogFile path	| log\001wsp.log+utlExpect(<wispr>, 20)+tmrExp(20)+->''
-ERR(wsp)	|0| 20:42:20 wsp start fail+wspRemainS():1060s+utlExpect(<wispr>, 20)+tmrExp(20)+->''
-ERR(wsp)	|1| 20:42:41 wsp start fail
wspStorm() exception=1, 1=open 2=RDY 3=predict 8=close+wspRemainS():1039s
wspDetectH() idle for 17 minutes
<<<< CRASH >>>>  (saved @ 0xB000)  <<<< CRASH >>>>

 === antenna module stop 2019-03-21 20:41:58+antDevice(cf2)
wspRiseT(): rise at 2019-03-21 22:00:00
wspDetectD() starting wispr detection; end in 1 hours
wspStart(): activating wispr#1+(log\001wsp.log)+
utlLogFile path	| log\001wsp.log+utlExpect(<wispr>, 20)+tmrExp(20)+->''
-ERR(wsp)	|0| 20:42:20 wsp start fail+wspRemainS():1060s+utlExpect(<wispr>, 20)+tmrExp(20)+->''
-ERR(wsp)	|1| 20:42:41 wsp start fail
wspStorm() exception=1, 1=open 2=RDY 3=predict 8=close+wspRemainS():1039s
wspDetectH() idle for 17 minutes
2019-03-21 21:00:01 wspDetectD():1+utlExpect(<wispr>, 20)+tmrExp(20)+->''
-ERR(wsp)	|2| 21:00:22 wsp start fail+wspRemainS():3578s
<<<< CRASH >>>>  (saved @ 0xB000)  <<<< CRASH >>>>

